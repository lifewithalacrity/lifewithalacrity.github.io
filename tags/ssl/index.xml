<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Ssl on Life With Alacrity</title>
    <link>http://www.lifewithalacrity.com/tags/ssl/index.xml</link>
    <description>Recent content in Ssl on Life With Alacrity</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <atom:link href="http://www.lifewithalacrity.com/tags/ssl/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>Some History of SSL Security Reviews</title>
      <link>http://www.lifewithalacrity.com/2014/04/some-history-of-ssl-security-reviews.html</link>
      <pubDate>Fri, 11 Apr 2014 12:01:00 -0700</pubDate>
      
      <guid>http://www.lifewithalacrity.com/2014/04/some-history-of-ssl-security-reviews.html</guid>
      <description>&lt;p&gt;Regarding the Heartbleed bug, SSL and TLS vendors used to require code security reviews before CAs would accept certificate requests from that implementation.&lt;/p&gt;
&lt;p&gt;My firm Consensus Development was the only one offering these reviews, largely because other security firms were scared of liability issues. Over 50% of the products failed in less then 8 hours of review, typically for very stupid mistakes. The CAs stopped asking us for reviews because it was slowing down sales of certificates.&lt;/p&gt;
&lt;p&gt;I believe that we would have found last month&amp;#39;s Apple bug if we reviewed it. Maybe not Heartbleed, but we were doing these security reviews TWENTY years ago. If we had kept at it we would have created better tools by now.&lt;/p&gt;
&lt;p&gt;It may be time for CAs to require vendors to pay for implementation security reviews again, or only offer a lower level certificate. They also need to indemnify security reviewers so that they can do this kind of work without fear of being sued for not finding a bug (hard to prove a negative). And there should be a pool of funding to do independent security reviews of open source.&lt;/p&gt;
&lt;p&gt;The amazing Tim Dierks , author of SSLRef, the reference implementation of SSL 3.0, co-author IETF TLS 1.0 standard and subsequent updates, and later creator of Google Wallet, did all of these reviews for us back then. Any memories, comments, or suggestion to add?&lt;/p&gt;
&lt;p class=&#34;previous&#34;&gt;&lt;a href=&#34;http://www.lifewithalacrity.com/previous/2014/04/some-history-of-ssl-security-reviews.html&#34; rel=&#34;syndication&#34; class=&#34;u-syndication&#34; &gt;orginal layout&lt;/a&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Tools for Ignition &amp; HyperCard’s 25th Anniversary</title>
      <link>http://www.lifewithalacrity.com/2012/08/tools-for-ignition-hypercards-25th-anniversary.html</link>
      <pubDate>Sun, 12 Aug 2012 16:27:42 -0700</pubDate>
      
      <guid>http://www.lifewithalacrity.com/2012/08/tools-for-ignition-hypercards-25th-anniversary.html</guid>
      <description>&lt;p&gt;Over my lifetime I have encountered a number of “tools for ignition” — a phrase which I use to describe innovative products that have empowered people and created movements. On the 25th anniversary of Hypercard’s introduction, I want to take a look back at some of these tools.&lt;/p&gt;
&lt;h2&gt;BASIC (1976)&lt;/h2&gt;
&lt;p&gt;In 1976 I encountered my first tool for ignition: &lt;a href=&#34;http://en.wikipedia.org/wiki/Bill_Gates&#34;&gt;Bill Gate&amp;#39;s&lt;/a&gt; &lt;a href=&#34;http://en.wikipedia.org/wiki/IMSAI_8080&#34;&gt;MicroSoft BASIC&lt;/a&gt; running on the &lt;a href=&#34;http://en.wikipedia.org/wiki/IMSAI_8080&#34;&gt;IMSAI 8080&lt;/a&gt;. There was no ROM on this computer, so you had to load a boot program using the front panel switches you see above. This program would then allow us to use a paper-tape reader, from which we would load BASIC.&lt;/p&gt;
&lt;p&gt;&lt;img alt=&#34;&#34; height=&#34;310px;&#34; src=&#34;https://lh5.googleusercontent.com/2hMUDycBGPQ3z3AM1rBtQw5J5-xDS9vNnaBZEbJf0G_GyROnc2pvxi0zCxLwxYH5jc3NTeD0gi3nbCnuq516Qzq4b1mqarsVDLAZaenIW0aPmtN6-JQ&#34; width=&#34;540px;&#34; /&gt;&lt;/p&gt;
&lt;p&gt;At 15 it wasn&amp;#39;t the hardware that got me excited, it was the idea of software — that you could take a creative idea that was in your mind and then craft that idea into a reality.&lt;/p&gt;
&lt;p&gt;My passion of the moment was French (the daughter of my French teacher was quite cute), so my first program was an attempt to teach my computer to translate between French to English.&lt;/p&gt;
&lt;p&gt;Alas, I utterly failed in my first attempt, limited by the 4K RAM, and I had no more luck working in 8K. But my failure didn&amp;#39;t matter in the long term — it inspired a career creating tools that nurture creative passions.&lt;/p&gt;
&lt;h2&gt;BBS (1978)&lt;/h2&gt;
&lt;p&gt;My next experience with a tool for ignition was &lt;a href=&#34;http://en.wikipedia.org/wiki/Ward_Christensen&#34;&gt;Ward Christensen&amp;#39;s&lt;/a&gt; &lt;a href=&#34;http://en.wikipedia.org/wiki/CBBS&#34;&gt;CBBS&lt;/a&gt;, the first electronic bulletin board system. Within months of its release in 1978, there were BBSs sprouting up all over the United States. I dialed a long-distance number, logged into a BBS, and discovered many passionate people wanting to share their experience — not only computer, but life. For the first time, I experienced computer software as a tool for human interaction, not only as a utility for running a program.&lt;/p&gt;
&lt;p&gt;By this point I was working after school part-time in a microcomputer store, so I scavenged up an old S100 computer and a used modem and made available a small BBS in my hometown. No longer having to pay long-distance charges, at 17 I found myself at the center of an online community. This experience proved invaluable — indeed, today I credit my success to the skills I acquired in facilitating online conversations and growing communities that share common interests.&lt;/p&gt;
&lt;h2&gt;MacPaint (1984)&lt;/h2&gt;
&lt;p&gt;Six years passed, and personal computers started to become more common in people’s workplaces and homes. Unlike the IMSAI 8080, they now had screens and keyboards, and they made great text processors and data crunchers, but they weren’t particularly “sexy”. On January 24, 1984, the first Mac was released, and I dropped into my local computer store to see what it was all about. The original 128K Mac was “different”, as Apple’s later marketing campaign put it, but also clunky in appearance.&lt;/p&gt;
&lt;p&gt;However, my jaw dropped when I saw Bill Atkinson&amp;#39;s (MacPaint) [&lt;a href=&#34;http://en.wikipedia.org/wiki/MacPaint&#34;&gt;http://en.wikipedia.org/wiki/MacPaint&lt;/a&gt;]. The simple elegance of this software that allowed me to draw and express myself graphically on a computer screen with a mouse was what sold me on the Mac, not the hardware.&lt;/p&gt;
&lt;p&gt;&lt;img alt=&#34;&#34; height=&#34;375px;&#34; src=&#34;https://lh5.googleusercontent.com/fg9RtUixZeDKNeftTruklS0XPfhlwgQigeysrEooKC06H8mD4BYUFr16CvUtnCTGV5XGPv2zr_I5GPiOSV9uvM3riaLE6DvDTWTdRC1wHZ20Ag-BEvw&#34; width=&#34;500px;&#34; /&gt;&lt;/p&gt;
&lt;p&gt;By this point, I was making my living doing software development. I wasn&amp;#39;t an artist myself, but I dropped everything to hire some artist friends to start drawing on the Mac. I would start a clip-art company, I thought, not knowing that too many other people had the same idea. So I considered how I could build on my prior experience with computers and take advantage of this new platform. I wrote a bootstrap app (in BASIC!) to take advantage of the Mac’s serial port and enable the user to download a more serious terminal app. Later I published the first Macintosh BBS Mouse Exchange BBS, and the first graphical interface to a BBS.&lt;/p&gt;
&lt;h2&gt;Open Standards (1985)&lt;/h2&gt;
&lt;p&gt;Later in 1985 I experienced my next tool for ignition — though “tool” may seem an odd term to describe something so abstract — open standards. I had recently parlayed my facilitation skills into a paid position as a CompuServe sysop, and because of my bootstrap app, the Mac BBS that I published, I participated in my first open standard, called &lt;a href=&#34;http://en.wikipedia.org/wiki/MacBinary&#34;&gt;MacBinary&lt;/a&gt;, a way of encoding early Mac applications so that they could be transferred online.&lt;/p&gt;
&lt;p&gt;This was my first experience working with other engineers to facilitate the creation of something quite ephemeral and hard to describe to non-programmers. Not quite software, but a language between software, enabling them to share information and work together despite being written by different people in different programming languages.&lt;/p&gt;
&lt;p&gt;In the open standards community I learned the value of some principles that I use daily: &amp;quot;Ship early and often&amp;quot;, &amp;quot;Fail fast&amp;quot;, &amp;quot;Perfection is the enemy of the good&amp;quot;, &amp;quot;Be conservative in what you send, liberal in what you accept&amp;quot;, etc.&lt;/p&gt;
&lt;p&gt;My experience with MacBinary motivated me to continue participating in open standards efforts over the years, leading to what I consider my biggest success as a facilitator and co-author of the &lt;a href=&#34;http://www.ietf.org/rfc/rfc2246.txt&#34;&gt;SSL Standard&lt;/a&gt;, the world&amp;#39;s most widely deployed security standard. What drew me to SSL (as opposed to competitive security standards offered by others) was that it could be used for much more than just internet transactions. It could be used to secure a variety of conversations between people. Using the power of the RFC editor, I &lt;a href=&#34;http://en.wikipedia.org/wiki/List_of_TCP_and_UDP_port_numbers&#34;&gt;reserved ports&lt;/a&gt; for secure SMTP, IMAP, POP, IRC, FTP and more. I got some flack for this as internet ports are considered a limited resource, but it turned out well when SSL and these ports were used twenty years later during the Arab Spring to help ensure freedom of communication between protesters.&lt;/p&gt;
&lt;h2&gt;HyperCard (1987)&lt;/h2&gt;
&lt;p&gt;Twenty-five years ago this month — August 11,1987 at MacWorld — I encountered &lt;a href=&#34;http://en.wikipedia.org/wiki/Bill_Atkinson&#34;&gt;Bill Atkinson&amp;#39;s&lt;/a&gt; &lt;a href=&#34;http://en.wikipedia.org/wiki/HyperCard&#34;&gt;Hypercard&lt;/a&gt;. Hard to describe but truly a tool for ignition if there ever was one, Hypercard has been variously called a &amp;quot;stack of virtual cards, &amp;quot;hypermedia system&amp;quot;, &amp;quot;programming for the masses&amp;quot;. Bill Atkinson described it as &amp;quot;a construction kit that lets normal people make their own software&amp;quot;.&lt;/p&gt;
&lt;p&gt;I was already programming in a variety of programming languages, but like MacPaint before it, HyperCard drew me in because of its elegance and its ability to allow non-programmers to participate in the creation of software. You can see the most complex HyperCard stack I ever wrote, running a TV studio at Apple Computer, in the first 40 seconds of this &lt;a href=&#34;http://archive.org/details/hypercard_2&#34;&gt;1990 video feature&lt;/a&gt; on HyperCard.&lt;/p&gt;
&lt;p&gt;HyperCard empowered a whole generation of passionate, creative people who otherwise never would have had the chance to share their ideas and visions with the world. I saw thinkers I admired begin to express their thoughts through software. Artists and designers loved that they could bring their language of imagery to life. Children who never had programmed before would start by drawing on some &amp;quot;cards&amp;quot;, add buttons, show their friends, get excited and ultimately start on the path to learn how to express oneself through software. Amazing stories were told: some of my favorites were &amp;quot;If Monks Had Macs&amp;quot;, &amp;quot;Spaceship Warlock&amp;quot;, &amp;quot;Beyond Cyperpunk&amp;quot; and ultimately &lt;a href=&#34;http://en.wikipedia.org/wiki/Myst&#34;&gt;Myst&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;&lt;img alt=&#34;&#34; height=&#34;417px;&#34; src=&#34;https://lh4.googleusercontent.com/6llXEJWlkTXTnx1w9A4-QrDaHAtLqsFlGBUSo1ZyzEcLcUgSQGTvDRzbPkywmya5xmwfLzYhSumo9ZJOChJObJD-piKzx8byUQbkTmjw4P29ixJ17Q4&#34; width=&#34;576px;&#34; /&gt;&lt;/p&gt;
&lt;p&gt;HyperCard had a profound impact beyond those who discovered and used it on the Mac. Many do not know that &lt;a href=&#34;http://en.wikipedia.org/wiki/Tim_Berners-Lee&#34;&gt;Tim Berners-Lee&lt;/a&gt;, the creator of the World Wide Web, was &lt;a href=&#34;http://www.w3.org/History/1989/proposal.html&#34;&gt;inspired&lt;/a&gt; by HyperCard. &lt;a href=&#34;http://en.wikipedia.org/wiki/Ward_Cunningham&#34;&gt;Ward Cunningham&lt;/a&gt;, investor of the first Wiki also &lt;a href=&#34;http://c2.com/cgi/wiki?WikiWikiHyperCard&#34;&gt;credits&lt;/a&gt; it for inspiration.&lt;/p&gt;
&lt;h2&gt;HyperCard&amp;#39;s 25th Anniversary&lt;/h2&gt;
&lt;p&gt;In celebration of Hypercard&amp;#39;s 25th anniversary, we asked Bill Atkinson to come to the Hillside Club in Berkeley to &lt;a href=&#34;http://sites.google.com/a/hillsideclub.org/hillsideclub/programs/cybersalons&#34;&gt;speak&lt;/a&gt;. In advance of this, I asked my colleagues and friends to share what inspired them about HyperCard by posting to blogs and twitter using the hashtag &lt;a href=&#34;https://twitter.com/#!/search/realtime/%23hypercard25th&#34;&gt;#HyperCard25th&lt;/a&gt;. Here are some of my favorite appreciations:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Lion Kimbro ‏@LionKimbro HyperCard showed me that writing code can be like molding clay into a sculpture, forever changing my idea of programming.&lt;/p&gt;
&lt;p&gt;debs ‏@debs Happy 25th Bday HyperCard. You introduced me to the empowering world of computers as creativity..b4 you it was intimidating&lt;/p&gt;
&lt;p&gt;Sean McBride ‏@smcbride HyperCard got me started with computers and programming. Made a card catalog for my library in grade school. Thanks!&lt;/p&gt;
&lt;p&gt;Richard Ford ‏@rvf It uniquely let me develop and share tools to solve problems and teach in minutes rather than days. Happy 25th Hypercard!&lt;/p&gt;
&lt;p&gt;AnthroPunk ‏@AnthroPunk Apple&amp;#39;s The Virtual Museum was stack. QT Beta-VM had JPL MARS data for 1st MULTIMEDIA MARS FLYOVER EVER!&lt;/p&gt;
&lt;p&gt;Chris Heuer ‏@chrisheuer wow, can&amp;#39;t believe it&amp;#39;s been 25 yrs! HyperCard gave me an innate understanding if hyperlinked computing, leading me here...&lt;/p&gt;
&lt;p&gt;Jason Sims ‏@stormchild HyperCard was way ahead of its time. It influenced the creation of the WWW, and powered the classic game Myst.&lt;/p&gt;
&lt;p&gt;Grant Neufeld ‏@grant I have seen nothing before or since that can top HyperCard for fun and ease of getting into programming. It changed my world.&lt;/p&gt;
&lt;p&gt;John McDaid ‏@jmcdaid Happy birthday, #HyperCard25th a still-unequaled tool that enabled a generation of writers to do amazing things. Thank, you Bill Atkinson.&lt;/p&gt;
&lt;p&gt;Jon Pugh ‏@thejonpugh I first saw WildCard when Chuck showed up at A32 user group meeting with a bootleg beta. It was love at first sight.&lt;/p&gt;
&lt;p&gt;Danny Ngan ‏@poopoorama Wow, HyperCard is 25 years old! It was the first app I used for animation and interactive media back in 1989.&lt;/p&gt;
&lt;p&gt;Andrew Stone ‏@twittelator 25 years ago I was so inspired by Bill Atkinson&amp;#39;s demo of HyperCard, I dropped everything and became a Mac programmer&lt;/p&gt;
&lt;p&gt;John Stack ‏@johnstack Happy #Hypercard25th Easy for newbies! Gave me hope that I could get something done and I did!&lt;/p&gt;
&lt;p&gt;Peter Thoeny ‏@peterthoeny Häppy 25th Birthday! Today is HyperCard&amp;#39;s birthday. It inspired wikis and TWiki.&lt;/p&gt;
&lt;p&gt;We are connected ‏@MarkDilley Happy birthday #HyperCard25th !! Without you there would be no #WikiBirthday !!&lt;/p&gt;
&lt;p&gt;David Weinberger ‏@dweinberger 25 yrs ago I was at the HyperCard launch, greatest I&amp;#39;d ever seen. But HyperCard + Net != The Web&lt;/p&gt;
&lt;p&gt;Sean Parent ‏@SeanParent HyperCard turns 25! The natural language structure in HyperCard had a big influence on Photoshop Actions. Thanks Bill!&lt;/p&gt;
&lt;p&gt;Geppy ‏@geppyp Happy birthday Hypercard!!! This weekend is the 25th Anniversary of HyperCard, my first step in the mac programming world!&lt;/p&gt;
&lt;p&gt;Worth Godwin ‏@windowsmachowto I discovered HyperCard when setting up a Mac lab for school credit in 1990. Thought it was amazingly cool &amp;amp; kinda miss it.&lt;/p&gt;
&lt;p&gt;Alex Seville ‏@alex_seville Coming up with ideas, and easily implementing them with Hypercard certainly influenced my lifelong interest in programming&lt;/p&gt;
&lt;p&gt;Jason McIntosh ‏@JmacDotOrg I used Hypercard while employed at UMaine to make interactive presentations for students &amp;amp; faculty. My first programming job.&lt;/p&gt;
&lt;p&gt;Kristee Rosendahl ‏@SmartGardener1 HyperCard had seismic impact on how we envisioned/designed &amp;quot;multimedia&amp;quot; at the Apple Multimedia Lab back in those early days.&lt;/p&gt;
&lt;p&gt;Bryan Stearns ‏@bryanstearns Standing on the shoulders of giants… like you do&lt;/p&gt;
&lt;p&gt;Clark Quinn ‏@Quinnovator HyperCard played big part in my work and thinking: learning games and performance support tools&lt;/p&gt;
&lt;p&gt;Scott Draves ‏@spot Blew my mind and absorbed many hours, yes we had it back in the 80s. Now remember the man who made it&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2&gt;Infinite Canvas (2012)&lt;/h2&gt;
&lt;p&gt;It is the mindset expressed in three more&amp;#0160;quotes from &lt;a href=&#34;https://twitter.com/#!/search/realtime/%23hypercard25th&#34;&gt;#HyperCard25th&lt;/a&gt; neatly sum up what inspired me to create a new tool for ignition — &lt;a href=&#34;http://www.infinitecanvasapp.com/&#34;&gt;Infinite Canvas&lt;/a&gt;.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Mike Sugarbaker ‏@misuba It&amp;#39;s HyperCard&amp;#39;s 25th birthday. We still haven&amp;#39;t seen its equal as far as I&amp;#39;m concerned. I hope we do.&lt;/p&gt;
&lt;p&gt;David HM Spector ‏@dhmspector HyperCard let me do fast prototypes &amp;amp; lots of flexible mini-apps for my clients; great tool! So Apple, HC for iPad? Please?&lt;/p&gt;
&lt;p&gt;Howard Greenstein @howardgr Hypercard – An Amazing Tool I Still Miss #HyperCard2th&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Since 2007 I have been running a participatory event, originally called iPhoneDevCamp, but now called &lt;a href=&#34;http://www.iosdevcamp.org/&#34;&gt;iOSDevCamp&lt;/a&gt;. Over the course of a weekend we get ~400-500 people to stay up late and show their effort in a Hackathon. At the &lt;a href=&#34;http://www.iosdevcamp.org/2012/07/23/ios-devcamp-2012-awards/&#34;&gt;last one&lt;/a&gt; 71 new iPhone and iPad apps were created in 36 hours, 29 of which were &lt;a href=&#34;http://www.iosdevcamp.org/2012/07/26/open-source-apps-at-iosdevcamp-2012/&#34;&gt;open source&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;iOSDevCamp appeals to me because it is creative ignition in action — it was founded on twitter, organized as an online community, supports the ideals of collaboration and nutures passionate creative people. In recent years I&amp;#39;ve been quite proud of the diversity of the conference, with &lt;a href=&#34;http://www.xeodesign.com/tiltstory.html&#34;&gt;designers&lt;/a&gt;, &lt;a href=&#34;http://ipadportraits.blogspot.com/2012/07/ipad-portrait-of-paul-ossenbruggen.html&#34;&gt;artists&lt;/a&gt;, &lt;a href=&#34;http://ebayinkblog.com/2012/08/08/girls-ideas-take-center-stage-at-iosdevcamp/&#34;&gt;women&lt;/a&gt;, &lt;a href=&#34;http://www.youtube.com/watch?v=vYooh4UU_H0&amp;amp;feature=plcp&#34;&gt;young adults&lt;/a&gt; and even &lt;a href=&#34;http://www.iosdevcamp.org/2012/08/04/qa-with-krithika-yetchina-winner-of-best-woman-entrepreneur/&#34;&gt;children&lt;/a&gt; participating.&lt;/p&gt;
&lt;p&gt;&lt;img alt=&#34;&#34; height=&#34;266px;&#34; src=&#34;https://lh5.googleusercontent.com/L3ESdmV0HCk-468UAzVPlU_rVBCl5trMN1TARxQNrmyhMf5hB-YkzxvPCpLr08BEUt9oYdBXclqFP5yjh9WfQHOforcIM2PTkQC3fA7J1E7pFN51oEU&#34; width=&#34;400px;&#34; /&gt;&lt;/p&gt;
&lt;p&gt;However, today the barriers between being a spectator and becoming a creator are huge. It is increasingly hard for a new user to create a good-looking web page. The skills required to create an iPhone or iPad app are quite intimidating. I have had many designers show up at iOSDevCamp whom I was unable to match with a coder because they lacked the most basic understanding of the principles of interactivity. Sadly, I was unable to facilitate their full participation.&lt;/p&gt;
&lt;p&gt;So at iOSDevCamp 2010 I started &lt;a href=&#34;http://www.infinitecanvasapp.com/&#34;&gt;Infinite Canvas&lt;/a&gt;, based on the principles of what inspired me about HyperCard. This tool needed to allow artists, designers, photographers, children to easily experience creating interactive stories and experiences. It needed to not only be easy to use, but also easy to share — no gatekeepers saying &amp;quot;This isn&amp;#39;t good enough&amp;quot;. It needed to support discoverability, where those new to the language of interactivity could learn and advance their skills to ultimately create quite sophisticated experiences. And it needed to take advantage of the new computing experiences that the iPad offers — portability, touchability — advantages that even the lightest laptop was never quite able to match.&lt;img align=&#34;right&#34; alt=&#34;&#34; height=&#34;160px;&#34; src=&#34;https://lh4.googleusercontent.com/-R0dPu8LFfhE45XG327JNH1ZlNRqH_Z3kRftvNsLCIRIPUM3HMyboMtNiBSqyrd_qvtOiDq6DTQnZKricdwNvzjN9Labtk7iIF8fSIbVGl4KT_HQFwI&#34; width=&#34;120px;&#34; /&gt;&lt;/p&gt;
&lt;p&gt;The first version of &lt;a href=&#34;http://bit.ly/infinitecanvasapp&#34;&gt;Infinite Canvas&lt;/a&gt; iPad app, initially a viewer-only version, was approved and &lt;a href=&#34;http://www.infinitecanvasapp.com/2012/08/11/announcing-the-release-of-infinite-canvas-viewer-in-the-app-store/&#34;&gt;released&lt;/a&gt; Friday in the Apple App Store, the day before HyperCard&amp;#39;s anniversary. There is a library of example canvases available which can be downloaded for free using the app. Users will be able to create their own canvases in the near future when the Infinite Canvas authoring tool makes its debut.&lt;/p&gt;
&lt;p&gt;We still have a long way to go to offer all that HyperCard offered. We support both simple tiles and HTML5 tiles, but the learning bridge between them is huge. But in the spirit of &amp;quot;Ship early and often&amp;quot;, &amp;quot;fail fast&amp;quot;, and &amp;quot;perfection is the enemy of the good&amp;quot; we wanted to make this tool available now.&lt;/p&gt;
&lt;p&gt;Bill Atkinson once &lt;a href=&#34;http://archive.org/details/hypercard_2&#34;&gt;explained what motivated him to create HyperCard:&lt;/a&gt; &amp;quot;A lot of people are going to get opened up, enabled, empowered to control their computer. That&amp;#39;s really what we&amp;#39;re trying to do.” And that is exactly what we are trying to do on the iPad with Infinite Canvas.&lt;/p&gt;
&lt;p class=&#34;previous&#34;&gt;&lt;a href=&#34;http://www.lifewithalacrity.com/previous/2012/08/tools-for-ignition-hypercards-25th-anniversary.html&#34; rel=&#34;syndication&#34; class=&#34;u-syndication&#34; &gt;orginal layout&lt;/a&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Future Topics</title>
      <link>http://www.lifewithalacrity.com/2005/04/future_topics.html</link>
      <pubDate>Mon, 04 Apr 2005 01:08:16 -0700</pubDate>
      
      <guid>http://www.lifewithalacrity.com/2005/04/future_topics.html</guid>
      <description>&lt;p&gt;I&#39;ve been working on an ambitious list of topics that I&#39;d like to cover over the next year. I offer them to you here so you can have some idea the areas that I am thinking about.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;&lt;em&gt;Office Architecture for Innovation&lt;/em&gt;&lt;/strong&gt; -- Over the years I&#39;ve built or converted three offices to my specifications. From this I have learned a number of things about about how to create a productive environment innovation-oriented businesses. These include some of the obvious suggestions such as fresh air and natural light, but also include not so obvious ideas such as using magnetic paint and providing a small washer-dryer.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;&lt;em&gt;Requisite Variety&lt;/em&gt;&lt;/strong&gt; -- This concept from cybernetics applies to social systems as well. &amp;quot;The larger the variety of actions available to a control system, the larger the variety of perturbations it is able to compensate.&amp;quot; More people, as well as a diversity of thinking styles and experience, give social software more &amp;quot;variety of actions&amp;quot;, thus this is part of the reason why social software can be so effective.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;&lt;em&gt;The Art and Craft of Meme Design&lt;/em&gt;&lt;/strong&gt; -- We are learning more about how to create an effective meme. Creating memes has always been an art performed by publicists, marketers, politicians, the press, and to a lesser extent by scientists and other academics. Have we learned enough to turn this art into an explicit craft?&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;&lt;em&gt;Wiki Editing Dichotomy&lt;/em&gt;&lt;/strong&gt; -- One interesting possible barrier of entry to active participation in a wiki is what I call the &amp;quot;wiki editing dichotomy&amp;quot;. You have to be proud enough to believe what you are contributing is generally worthwhile to others (or at least worth your effort), but you also have to be humble enough to understand that others can improve it. I don&#39;t know of many other collaborative media that requires both pride and humility.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;&lt;em&gt;Choice &amp;amp; Neuroeconomics&lt;/em&gt;&lt;/strong&gt; -- There are some that say at the root of every decision is emotion. Even a &#39;rational&#39; decision appeals to a sense of balance or beauty. Recent studies using PET are establishing a neurological basis for emotions, and some reveal interesting facts about how we make choices.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;&lt;em&gt;Assessing Risk&lt;/em&gt;&lt;/strong&gt; -- There are a variety of areas where we as humans have a difficult time being completely rational. One of these is risk assessment. It turns out we may be hard-wired to not be able toeasily understand risk that is greater then one in a hundred or so. Thus a very rare risk, say one in a thousand, will often be emotionally interpreted as having a much higher risk.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;&lt;em&gt;Persuasive Computing&lt;/em&gt;&lt;/strong&gt; -- BJ Fogg&#39;s group at Stanford has done some interesting research on how computers can persuade you to do something. There are a number of useful ideas that come from this research. There are also some ethical considerations that should be discussed.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;&lt;em&gt;Cognitive Dissonance&lt;/em&gt;&lt;/strong&gt; -- This technique is central to many forms of persuasion intended to change beliefs, values, attitudes and behaviors. It is used by facilitators, businesses, military organizations, and even cults. It can be used positively or negatively. How might it be used in social software?&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;&lt;em&gt;The Dark Side of the Force&lt;/em&gt;&lt;/strong&gt; -- The same social tools that we use for good, can also be used for harm. How do we ethically use what we are learning about social software? Some say that almost by definition social software attracts spammers, trolls, and innappropriate sexuality. What can we do to prevent these misuses of social software?&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;&lt;em&gt;Conversation vs Communication&lt;/em&gt;&lt;/strong&gt; -- Update and rewrite of my &lt;a href=&#34;http://www.alacritymanagement.com/GCnC.html&#34;&gt;1990 essay&lt;/a&gt; on how social software design needs to balance conversation vs communication.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;&lt;em&gt;Social Emotions&lt;/em&gt;&lt;/strong&gt; -- We appear to have evolved a number of emotions that appear primarily to exist to support a common good, rather then to ensure our individual success. These include schadenfreude, mirth, naches, revenge, shame, pride, outrage, approbation, admiration, elevation, etc. Studies by Eckman on unconscious facial gestures, studies on the neurological basis for emotions, and studies on emotions in games, are proving that these social emotions exist. A number of them have interesting implications on social software.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;&lt;em&gt;Glances &amp;amp; Strokes&lt;/em&gt;&lt;/strong&gt; -- There is some old work on the amount of eye contact we make with others in small groups, as well as some research from transactional analysis on strokes, which are the amount of recognition given to others through words and deeds. Is there a neurological basis for needing a certain number of glances and strokes each day? How does this concept apply to social software?&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;&lt;em&gt;Weak Links&lt;/em&gt;&lt;/strong&gt; -- There are some interesting social implications behind what we&#39;ve learned about weak links in social networks. How do we identify and encourage weak links in our social software systems?&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;&lt;em&gt;Negativity vs Positivity&lt;/em&gt;&lt;/strong&gt; -- It is far easier for someone to respond negativel than positively. In political systems it is far easier to say no rather then yes. What social software encourages positivity, and is it possible to design social software to do so?&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;&lt;em&gt;Time Economy&lt;/em&gt;&lt;/strong&gt; -- Our ultimate most unrenewable resource is time. How time and attention are a basic economic unit that should be considered when looking at social software.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;&lt;em&gt;Group Life Cycle&lt;/em&gt;&lt;/strong&gt; -- We often focus on how groups form, emerge, and grow. Yet there are many lessons to be learned from how groups die, including that it isn&#39;t necessarily a bad thing and that keeping a group from death can be dysfunctional.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;&lt;em&gt;Groupthink&lt;/em&gt;&lt;/strong&gt; -- What causes groupthink? When is it good and when is it bad?&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;&lt;em&gt;Two Thresholds in the Value of Knowledge&lt;/em&gt;&lt;/strong&gt; -- In order for knowledge to be valuable, it must at minimum be more valuable then the costs to find and absorb it (costs which include bandwidth and attention). Tools like Google have tremendously increased the amount of knowledge that is worth the time and attention to find it. What types of knowledge fall below this threshold of value? Is there a limit to how much we can lower this line? Furthermore, there is another threshold where the knowledge is significantly more valuable than only bandwidth and attention. How much have internet tools impacted this second threshold? Many internet business models, in particular content models, require some ability to offer value in this upper threshold -- can they survive as this upper threshold changes?&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;&lt;em&gt;Intimacy and Social Networks&lt;/em&gt;&lt;/strong&gt; -- Social Networks Analysis tends to focus on the connections between people, either explicitly through acknowledgement of connections (LinkedIn, Friendster) or implicitly through analysis of your communication (Spoke). None are able to measure intimacy. Yet our intimate social networks are an important component of our overall happiness and contentment within both our professional and personal lives. How does intimacy work in social networks? Also there are some concepts in psychology known as communal vs exchange relationships by Clark &amp;amp; Mills from late 70&#39;s that may apply here.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;&lt;em&gt;Social Games&lt;/em&gt;&lt;/strong&gt; -- A recap of Shannon Appelcline&#39;s and my analysis of the basic forms of social games types. These include relatively well understood ones like majority control, voting, meta-voting (Nomic), auctioning, etc., but also include less well understood games like playing of roles, dominance and submission, etc. There are also links to social emotions, such as mirth and schadenfraude.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;&lt;em&gt;Lessons from Castle Marrach&lt;/em&gt;&lt;/strong&gt; -- We released the Castle Marrach online game in September of 2000, and it was designed from the beginning to be a game for the Bartle-type known as &amp;quot;the socializer&amp;quot;. What lessons did we learn in the five years since the release of the game? What tools are in my social software toolbox today that might have helped with the design?&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;&lt;em&gt;Lessons from F2F Facilitation&lt;/em&gt;&lt;/strong&gt; -- There are many skilled practitioners of face-to-face facilitation, some of which are paid very high fees for their skills. What lessons can we learn from their experience that we can apply to social software? Why have so many of these facilitators failed to have success online?&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;&lt;em&gt;More Human vs More Than Human&lt;/em&gt;&lt;/strong&gt; -- Many futurists seek to offer us augmentation of our minds and bodies through technology. Many of these ideas may fundamentally change what it is to be human, and may even have unforeseen complications unanticipated by their creators. One interesting approach to looking at these technologies is to examine which make us &amp;quot;more human&amp;quot;, rather then &amp;quot;more than human&amp;quot;.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;&lt;em&gt;Lessons from Mental Disorders&lt;/em&gt;&lt;/strong&gt; -- Most, if not all, mental disorders have their roots in survival strategies; however, they are over-expressed because of genetic or other causes. Examining the healthy behaviors hiding behind depression, autism, mania, schizophrenia, paranoia, etc. offer a number of insights on how we think.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;&lt;em&gt;Joy of being a Primate&lt;/em&gt;&lt;/strong&gt; -- If you scan the surface of my writing, you may observe that I have a strong belief that our animal nature and genetics form an essential and often unconscious part of what it is to be human. You could interpret these &amp;quot;nature&amp;quot; over &amp;quot;nurture&amp;quot; ideas as limiting us to being just animals. Instead, I believe that by becoming aware of our primate nature, and choosing to leverage it or suppress it by conscious choice rather then letting it drive us unaware, is what makes us more powerful.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;&lt;em&gt;Smart Contracts&lt;/em&gt;&lt;/strong&gt; -- Nick Szabo popularized the idea of using some of the primitives of cryptography in unique ways to create what he calls &amp;quot;smart contracts&amp;quot;. He hypothesized approaches to cryptographic handling of collateral, bonding, delineation of property, bearer certificates, and much more. Others have proposed various auction protocols using these concepts. One of the fundamental atomic elements of many of these smart contracts is something called a &amp;quot;reusable proof of work&amp;quot;, which Hal Finney recently demoed a version of at CodeCon 2005. What are the possibilities offered by smart contracts? What are the barriers to implementation?&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;&lt;em&gt;Club System&lt;/em&gt;&lt;/strong&gt; -- In the 80&#39;s, development of Ted Nelson&#39;s Xanadu vision was being financed by Autodesk. Unfortunately, for a variety of reasons Xanadu failed to deliver any technology. However, a couple of their ideas could be valuable today, one of which is the concept of an alternative to the &amp;quot;user and groups&amp;quot; metaphor for computer security. Xanadu turned that idea upside down and called the result the &amp;quot;club system&amp;quot;. The club system approach is particularly suited to the internet based collaboration tools, in particular wikis. I also have some insights to offer a cryptographic approach to the club system, which might allow P2P distribution of collaborative documents, while preserving group privileges.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;&lt;em&gt;Edges of Cryptographic Security&lt;/em&gt;&lt;/strong&gt; -- The SSL cryptographic protocol offers a choice of a number of security properties: integrity, confidentiality, encryption, one-party authentication, and two-party authentication. But there are a number of security properties that very few deployed cryptographic protocols offer. These include perfect forward secrecy, undeniability, deniability, authorization, delegation, multi-party authentication, shared secrets, etc. What are these security properties and how are they useful? Why have they not been successfully broadly deployed?&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;&lt;em&gt;The SSL Story&lt;/em&gt;&lt;/strong&gt; -- When SSL was first proposed it was broken within an hour. Even when Netscape fixed those problems, it wasn&#39;t clear that SSL was going to win the battle of security protocols. SSL was competing against SHTTP which had backing of RSA and an industry consortium. The credit card companies merged their standards and were backing SET. The internet community was moving toward SSH. Microsoft was doing its own embrace and extend protocol PCT. So how did SSL win to become the broadest deployed cryptographic security protocol? The answers may surprise you.&lt;/p&gt;
&lt;p&gt;I welcome any comments or suggestions for links on these topics, or any new topics that you feel are closely related.&lt;/p&gt;
&lt;footer&gt;&lt;h3&gt;Comments&lt;/h3&gt;
&lt;div class=&#34;u-comment h-cite&#34;&gt;
&lt;p class=&#34;p-content p-name&#34;&gt;URL:
Get to work! Soon!
&lt;/p&gt;
&lt;a class=&#34;u-author h-card&#34; href=&#34;#&#34;&gt;Phil Mitchell&lt;/a&gt;
&lt;time class=&#34;dt-published&#34; datetime=&#34;2005-04-05T12:22:04-07:00&#34;&gt;2005-04-05T12:22:04-07:00&lt;/time&gt;
&lt;/div&gt;
&lt;div class=&#34;u-comment h-cite&#34;&gt;
&lt;p class=&#34;p-content p-name&#34;&gt;URL:
The SSL story would be interesting..
&lt;/p&gt;
&lt;a class=&#34;u-author h-card&#34; href=&#34;#&#34;&gt;cyberhill&lt;/a&gt;
&lt;time class=&#34;dt-published&#34; datetime=&#34;2005-05-13T08:10:30-07:00&#34;&gt;2005-05-13T08:10:30-07:00&lt;/time&gt;
&lt;/div&gt;
&lt;/footer&gt;
&lt;p class=&#34;previous&#34;&gt;&lt;a href=&#34;http://www.lifewithalacrity.com/previous/2005/04/future_topics.html&#34; rel=&#34;syndication&#34; class=&#34;u-syndication&#34; &gt;orginal layout&lt;/a&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Progressive Trust</title>
      <link>http://www.lifewithalacrity.com/2004/08/progressive_tru.html</link>
      <pubDate>Mon, 16 Aug 2004 23:42:15 -0700</pubDate>
      
      <guid>http://www.lifewithalacrity.com/2004/08/progressive_tru.html</guid>
      <description>&lt;p&gt;I believe that as we evolve social software to better serve our needs and the needs of the groups that we are involved in, we need to figure out how to apply an understanding of how human groups behave and work.&lt;/p&gt;
&lt;p&gt;One useful concept I use I call &#34;Progressive Trust&#34;. The basic idea is to model how trust works in the real world, between real people, rather then solely relying on mathematical or cryptographic trust.&lt;/p&gt;
&lt;p&gt;This is how I typically explain progressive trust when I meet someone in-person at a conference:&lt;/p&gt;
&lt;p&gt;You are now spending your most precious resource, that most unrenewable commodity -- time, in order to listen and understand what I have to say.&lt;/p&gt;
&lt;p&gt;Why do you do so? Because by the act of us being here in this common space, at this conference, you have found a very simple credential from me--that I&#39;m willing to spend time here in a place that you are interested in as well. In turn, I&#39;m willing to spend more time chatting with you for the same reason.&lt;/p&gt;
&lt;p&gt;Why do we continue to chat, and not move on to other people to discuss with? Because as we chat we are exchanging a number of credentials -- people we know in common, common interests, meaningful ideas, etc. We may also present credentials typically issued by others, like our business cards, or explain our relationship to the host.&lt;/p&gt;
&lt;p&gt;As our unspoken agreement to continue discussion evolves, we typically will unconsciously check to see if others are listening, and adapt our conversation thereafter. If the discussion becomes more personal or serious, we will often find ourselves moving to a more private portion of the room. As our discussions become deeper, we may begin to speak of things that hint at a mutual respect for confidentiality.&lt;/p&gt;
&lt;p&gt;Also early on we&#39;ll begin to scope out the nature of our time together. Is it only professional, or a potential friendship? Even intimate relationships go through this phase -- are we with someone who wants to date? Is is possible that a future date lead to something more?&lt;/p&gt;
&lt;p&gt;If we agree to meet later to discuss more, before we meet again we may go authenticate some of the credentials given us. We&#39;ll not authenticate all of them, only enough to substantiate the level of assurance that we need for the risk we are taking (which may only be the future loss due to wasted time, but even that is a form of risk.) This authentication can consist simply of confirming information given, or it can be as complex as asking for an endorsement from a mutual colleague.&lt;/p&gt;
&lt;p&gt;As our collaboration grows, we will find ourselves seeking more and more credentials, endorsements, etc., but they will not be enough. The next level of trust can only be established by experience of commitment -- for instance do we call back when we said we would? These tests typically start with small things, and then grow to larger things. At some point this may ultimately grow to form simple verbal contracts; over time richer, deeper social contracts are agreed upon that might not be written down.&lt;/p&gt;
&lt;p&gt;Ultimately we may bring in third parties to witness, and thus possibly enforce our mutual obligations, whether it is just having a mutual colleague view our handshake or friends see us kiss, or whether it is having a legal, signed document.&lt;/p&gt;
&lt;p&gt;At some point our mutual interests may be so large that we decide not just to collaborate, but to share assets, whether through a partnership, a corporation, or a marriage. Before this is complete there will be more credentials and authentication of those credentials (talk to former employees, engage in credit checks, visit each others&#39; families, take blood tests), endorsements, and less risky tests of the full contract (signing a term sheet, or a marriage engagement).&lt;/p&gt;
&lt;p&gt;This is the way human trust works. It also very similar to the way that groups work -- a corporation will collaborate with another corporation in the same way, starting with small trust, going on to tests, and leading ultimately up to partnerships and mergers.&lt;/p&gt;
&lt;p&gt;Computer trust rarely works the way that human trust does. It starts with mathematical proofs--that such and such a mathematical algorithm is extremely difficult, thus something built on it must also be difficult. These are then built on top of each other until a system is created. It often seeks a level of &#34;perfect trust&#34; that is rarely required by human trust.&lt;/p&gt;
&lt;p&gt;One of the reasons why I chose to back the then nascent SSL (Secure Sockets Layer) Standard back in 1992-3, was that I felt that it much better mapped to the progressive trust model, and thus to human trust, then did its competitors.&lt;/p&gt;
&lt;p&gt;At the time, the SET standard was backed by all the major players--Visa, Mastercard, Microsoft, etc. However, it not only required strong mutual authentication, but it also require multiple authentications. HTTPS was backed by RSA, required digital signatures, preferably by both parties. SSL was not necessarily a clear winner.&lt;/p&gt;
&lt;p&gt;But SSL starts out very simple--first it just connects two parties, then it establishes simple confidentiality between them. If one party wants more confidentiality, they can upgrade to a stronger algorithm. Then one party can request a credential from the other, or both can. Either party has the option to request authentication of those credentials. Ultimately you could use SSL to come close to the level trust that SET tried to establish, but SSL isn&#39;t generally used that way because the market decided that only one party needed to send a credential--the merchant. SSL also proved to be more flexible then for use just with web pages or credit cards -- now it is used for things like securing email, creating VPNs, and playing online games.&lt;/p&gt;
&lt;p&gt;Thus progressive trust is a useful conceptual model for understanding how trust might be built using online tools. Look at the tools that you are using now -- do they support various levels of trust, and a natural path between them? Or is trust more binary -- someone is only trusted, or not trusted. Are there implicit levels of progressive trust that are part of the culture of your group that might not embodied in the software itself?&lt;/p&gt;
&lt;p&gt;Progressive trust also maps well to an user-interface design technique called &lt;a href=&#34;http://c2.com/cgi/wiki?ProgressiveDisclosure&#34;&gt;Progressive Disclosure&lt;/a&gt;. It sequences information and actions across several different windows in order not overwhelm the user. You disclose basic information and choices first, then revealing progressively more complex information and choices. Thus you help the user manage the complexity of the application. Navigating group interactions and culture is also complex, thus progressive trust allows you to hide some of initial complexity of the trust model behind your tools, and thus lower barriers of entry to your software.&lt;/p&gt;
&lt;footer&gt;&lt;h3&gt;Comments&lt;/h3&gt;
&lt;div class=&#34;u-comment h-cite&#34;&gt;
&lt;p class=&#34;p-content p-name&#34;&gt;Ash Maurya&#39;s thought provoking Venn diagram in &#34;Beyond Social Networking&#34; (see http://www.wiredjournal.com/archives/000008.html) lists a number of modes or contexts that enable trust buildig in a relationship.
&lt;/p&gt;
&lt;a class=&#34;u-author h-card&#34; href=&#34;http://www.skmurphy.com/&#34;&gt;Sean Murphy&lt;/a&gt;
&lt;time class=&#34;dt-published&#34; datetime=&#34;2004-08-20T00:42:48-07:00&#34;&gt;2004-08-20T00:42:48-07:00&lt;/time&gt;
&lt;/div&gt;
&lt;div class=&#34;u-comment h-cite&#34;&gt;
&lt;p class=&#34;p-content p-name&#34;&gt;Very cogent post, Christopher.  I think you&#39;ve hit upon what makes blogs so useful and novel in the computing world.  I wrote a response in my own blog:
http://frassle.rura.org/christopherAllenGets
&lt;/p&gt;
&lt;a class=&#34;u-author h-card&#34; href=&#34;http://frassle.rura.org/Directory/index?feed=1&#34;&gt;Shimon Rura&lt;/a&gt;
&lt;time class=&#34;dt-published&#34; datetime=&#34;2004-08-26T08:39:54-07:00&#34;&gt;2004-08-26T08:39:54-07:00&lt;/time&gt;
&lt;/div&gt;
&lt;/footer&gt;
&lt;p class=&#34;previous&#34;&gt;&lt;a href=&#34;http://www.lifewithalacrity.com/previous/2004/08/progressive_tru.html&#34; rel=&#34;syndication&#34; class=&#34;u-syndication&#34; &gt;orginal layout&lt;/a&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Security &amp; Cryptography: The Bad Business of Fear</title>
      <link>http://www.lifewithalacrity.com/2004/02/security_crypto.html</link>
      <pubDate>Sun, 22 Feb 2004 14:12:29 -0700</pubDate>
      
      <guid>http://www.lifewithalacrity.com/2004/02/security_crypto.html</guid>
      <description>&lt;p&gt;As I head out next week to the &lt;a href=&#34;http://2004.rsaconference.com/&#34;&gt;RSA Conference&lt;/a&gt; I realized that it has been 13 years since I attended the first one. I remember fondly the potential and power of cryptography technology in 1991 -- public keys, digital certificates, new possibilities for privacy, digital cash, etc.&lt;/p&gt;
&lt;p&gt;After 8 more years I left the compujter security industry on March 15, 1999. The computer security industry also seemed to be filled with as much potential as it did back in 1991. Amazon, EBay, and other Internet notables were still riding high, and driving before them the need for secure Internet transactions. The government&#39;s attempt to cripple the industry through their Clipper chip initiative was all but dead, and we were slowly winning the rights to export our technologies without severe and unnecessary government restrictions. We were beginning to truly see how Certificate Authorities worked in practical usage, and were coming up with plans for smaller, more efficient certs, to help bring security to wireless devices and set-top boxes.&lt;/p&gt;
&lt;p&gt;It may seem strange that I left the industry at such a height, but I&#39;d accomplished my own personal goals. I helped midwife the startup of &lt;a href=&#34;http://www.verisign.com&#34;&gt;VeriSign&lt;/a&gt;, and digital certificates were now broadly available for both servers and clients. I&#39;d helped fight Clipper, and freed RSAREF so that it could be used by Open Source software before the expiration of the patent. I&#39;d grown Consensus Development, a company I founded almost a decade before, from a small engineering house into the premiere SSL developer. I&#39;d lead the team that developed the SSL Reference version for Netscape, and had completed the IETF&#39;s &lt;a href=&#34;http://www.ietf.org/rfc/rfc2246.txt&#34;&gt;RFC 2246&lt;/a&gt; that described the future of SSL called TLS.&lt;/p&gt;
&lt;p&gt;Thus I found myself at the heart of a burgeoning Internet commerce industry. When &lt;a href=&#34;http://www.certicom.com&#34;&gt;Certicom&lt;/a&gt;, a leading cryptography company, had expressed a desire to purchase my company, I considered the returns for my investors, the value to my employees -- I was pleased with the results, and agreed. So I made an exit from the security industry, and as part of my agreement with Certicom I signed a non-compete which gave them a few years&#39; head start before I dipped my foot back into the security industry. &lt;/p&gt;
&lt;p&gt;Now, five years more have gone by. My non-compete with Certicom has expired and for over a year I have slowly been easing my way back into the world of security and cryptography. I must admit, I was a bit uncertain at first. Five years ago I had seen the industry perched on the edge of the next big change. It had been prepared to secure the hundreds of new applications that were proliferating on the net; to broadly adopt TLS, the newest version of SSL; to really look at the practical applications of certificate authorities and recreate the entire concept as a second generation of ideas. I wondered how far behind I would be, if I&#39;d recognize the industry at all. Internet time had still been moving fast back in 1999 and I wasn&#39;t sure how many generations had gone by in the security industry. One, two, more?&lt;/p&gt;
&lt;p&gt;So last year I started attending security related conferences again, such as &lt;a href=&#34;http://www.ietf.org/meetings/meetings.html&#34;&gt;IETF Meetings&lt;/a&gt;, the &lt;a href=&#34;http://2004.rsaconference.com/&#34;&gt;RSA Conference&lt;/a&gt;, and others. I was ready to come as a student, to soak up the new knowledge imparted in the talks and tutorials, to glory in the changes that the last five years had brought. Instead I discovered, almost nothing had changed. If anything, the industry had been moving backward, just a tiny bit. &lt;/p&gt;
&lt;p&gt;What had happened to an industry that just five years ago had been rapidly pushing forward the frontiers of technology? &lt;/p&gt;
&lt;p&gt;And, more important, how could it move forward? &lt;/p&gt;
&lt;h4&gt;The State of the Industry: Living off of Fear&lt;/h4&gt;
&lt;p&gt;Overall, I find the state of the security industry to be a bit sobering for its lack of momentum in recent years. This slowdown can be seen nowhere as easily as upon the exhibit floor of RSA Conference, the premiere conference for this industry, which I attended last year and will attend again next week.&lt;/p&gt;
&lt;p&gt;Walking the floors of RSA last year, in the immense exhibit hall at the San Jose Convention Center, I did feel a sense of energy. The floor was still packed, and the carefully cut kiosks and the garish banners bespoke the millions put into the show by the exhibitors. The constant chatter was a deafening white noise, and whenever I veered too near a booth, there was a salesman very eager to tell me about his company&#39;s latest and greatest. &lt;/p&gt;
&lt;p&gt;But, to a certain extent, that energy felt to me like a facade. There was nothing new; instead all the exhibitors were showing off the same technology that they were displaying five years ago. There was a bit of glitz and some extra chrome, perhaps a carefully redesigned product name, but beyond that there was a weird feeling of deja vu. &lt;/p&gt;
&lt;p&gt;There were the same old tools that we&#39;ve been using to deter hackers since the advent of the Morris Worm way back in 1989: products to detect intruders and safeguard your machines against them; firewalls; and VPNs. Maybe we&#39;ve gotten a little better at figuring out expert rules, maybe we&#39;ve improved our user interfaces, but these are slow, gradual upgrades, not quantum leaps.&lt;/p&gt;
&lt;p&gt;Email still seems to be the newest battlefield upon which security wars are being fought, and you could find any number of new anti-spam tools at RSA. The Bayesian filters are a new and interesting way to statistically classify spam, but at the core level they&#39;re a dynamic outgrowth of keyboard filters that have been around for as long as we&#39;ve been fighting unsolicited commercial email. RSA&#39;s big release of the year, Nightingale, was simply another way to protect sensitive online information, a competitor to Microsoft&#39;s Wallet technology. We had the ubiquitous hardware tokens too, and discussion of the recently approved AES encryption standard, but nothing dramatically new and exciting. &lt;/p&gt;
&lt;p&gt;I suppose I shouldn&#39;t have been too surprised, based on my experiences at IETF a month before. Most of the Security Area working groups were still working on the same problems that they&#39;d been discussing five years before. S/MIME is pushing forward on yet another draft of a standard that has never been broadly deployed. IPSEC is similarly continuing to work on the same problems, now years old. TLS was widely implemented and specified, but not widely adopted -- the world still uses SSL 3.0.&lt;/p&gt;
&lt;p&gt;In the last year since those two conferences I had lunch with various professional colleagues that I had lost track of, continued to watch as a bystander the leading edge of security and cryptography.&lt;/p&gt;
&lt;p&gt;As I overview the industry I have begun to feel that we&#39;d largely abandoned the most interesting and innovative security techniques that were being discussed just five years ago. What happened to alternative public key infrastructures? What happened to attribute or role certificates? What happened to &#34;authorization&#34; being the next step after &#34;authentication&#34;, or separating &#34;security&#34; from &#34;privacy&#34;?&lt;/p&gt;
&lt;p&gt;Remarkably, if any of these topics are being considered, they seem to be moving outside of the traditional security industry. Such is the case with &lt;a href=&#34;http://www.oasis-open.org/committees/tc_home.php?wg_abbrev=security&#34;&gt;SAML, the Security Assertion Markup Language&lt;/a&gt;, a branch of XML which seems to be doing some of the only work on attribute certificates.&lt;/p&gt;
&lt;p&gt;With so many technologies abandoned utterly, or else given up to another computer fields, we must ask: why are we stagnating, moving backward rather than forward? &lt;/p&gt;
&lt;h4&gt;Fear: Outlining the Problem&lt;/h4&gt;
&lt;p&gt;I thought, could it be the result of the dot-bomb and subsequent recession? Perhaps that is part of it, but we are in denial unless we face the deeper cause. If we go on as we are the security industry will not recover with the next boom.&lt;/p&gt;
&lt;p&gt;The decline of the security industry is based upon a basic disconnect between the business world and the security world. &lt;/p&gt;
&lt;p&gt;Within the security industry we base our models of trust upon mathematics. We strive to continually push the envelope by codifying security and improving it. On the other hand the business industry bases its models of trust upon risk. It balances the risk of a bad outcome, the cost of that bad outcome, and the cost of reducing that risk. Even if a system is technically insecure, the business world will accept it if the risk of a security breach is low, the cost of a security breach is low, or the cost of closing that breach is high. &lt;/p&gt;
&lt;p&gt;Where our model is mathematics, theirs is economics. These two models worked well in tandem for quite a few years; the need for a security industry was initially obvious because of the totally undefined risks and the potentially high costs that were out there, waiting to be taken advantage of.&lt;/p&gt;
&lt;p&gt;But now, years later, we&#39;ve done our job too well. We&#39;ve taken all those undefined risks and codified them -- made them real and quantifiable. We&#39;ve offered real demonstrations of online security through years of ecommerce, and in doing so we&#39;ve proven lower rates of credit card fraud, and almost total proof from high-cost offline problems like extortion and bad reputation. We&#39;ve helped fill out business&#39; risk models and so shown when we were necessary and when weren&#39;t. &lt;/p&gt;
&lt;p&gt;In short, we have dug ourselves into a hole. Thus it shouldn&#39;t be surprising that the newer security technologies are stagnating ... because we&#39;ve carefully, cleverly, and constantly diminished our revenues by staying with a business model in which &#39;good enough&#39; security will become ever cheaper. We&#39;ve turned our security business into a cheaper alternative to insurance, where business only pay for security if their insurance premiums would otherwise be too high. As the bulk of the risk is now handled by old, cheap technology, what remains for new sales is not enough to keep us truly innovating.&lt;/p&gt;
&lt;p&gt;Recent statistics underline the decreasing value of innovative, new security to businesses. According to the &lt;a href=&#34;http://www.gocsi.com/press/20030528.jhtml?_requestid=105732&#34;&gt;CSI/FBI 2003 Computer Crime and Security Survey&lt;/a&gt;, the annual cost of computer crime has decreased in almost every category. From 2001 to 2003, the cost for theft of proprietary information is down from $151.2M to $70.2M. System penetration by outsiders is down from $19.1M to $2.8M. Insider abuse of network access is down from $35.0M to $11.8M. The only computer crime up in dollar damage inflicted is denial-of-service attacks, a very small part of the security pie. &lt;/p&gt;
&lt;p&gt;With costs due to computer crime plunging year after year, clearly companies are not incentivized to put money in new prevention technologies.&lt;/p&gt;
&lt;p&gt;To simplify, as long as the risks were unknown, we were in a business feeding off of &#39;fear&#39; and our security industry &#39;pie&#39; was growing. But as we and our customers both understand the risks better, and as we get better at mitigating those risks cheaply, this &#34;fear&#34; shrinks and thus the entire &#39;pie&#39; of the security industry becomes smaller. Yes, new &#39;threats&#39; keep on coming: denial-of-service, worms, spam, etc., but businesses understanding of past risks make them believe that these new risks can be solved and commodified in the same way.&lt;/p&gt;
&lt;p&gt;As the philosophy and culture of the business world is hundreds of years old, going back to at least the Italian merchants of the Renaissance, business isn&#39;t going to change its model of how business works. Thus, it is up to us to rework the basic beliefs and understanding of our security industry.&lt;/p&gt;
&lt;p&gt;In order to get out of this hole we need to dramatically rethink how we approach, develop, and market security services. To do this requires us to reconsider our own security models, based upon a better understanding of core business models. Some possibilities: &lt;/p&gt;
&lt;ol&gt;&lt;li&gt;&lt;a href=&#34;#insurance&#34;&gt;Enter the Insurance Business&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#reliabiliy&#34;&gt;Move into Reliability Improvement&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#enabling&#34;&gt;Move into Enabling Technologies&lt;/a&gt;&lt;/li&gt;&lt;/ol&gt;
&lt;h4&gt;&lt;a name=&#34;insurance&#34;&gt;Solution #1: Entering the Insurance Business&lt;/a&gt;&lt;/h4&gt;
&lt;p&gt;Entering the insurance business is an old idea. It was once an important part of &lt;a href=&#34;http://www.verisign.com&#34;&gt;Verisign&#39;s&lt;/a&gt; business plan, and no doubt of others as well.&lt;/p&gt;
&lt;p&gt;At its simplest level, we can enter the insurance business by offering a guarantee against damages with a product. The main benefit of this approach is that it lets us approach security in a more rational and realistic fashion. No longer do we have to engage in an endless quest for improved security, no matter how small the risk. Instead we can assess our risks and prepare ourselves to accept manageable losses. &lt;/p&gt;
&lt;p&gt;There are risks implicit in this solution as well. For the most part, those of us in the security industry are unfamiliar with the insurance business model, and thus we&#39;re entering particularly uncharted waters. In addition, we need to understand that some losses will be huge and unavoidable, such as was the case with the Code Red worm. We thus need to create business models that are acceptable to our customers, but which do not leave us entirely liable for the next utterly unforeseen worm which gets set loose on the Internet. &lt;/p&gt;
&lt;p&gt;There may also be some limitations with this particular model, if the valuations of security companies are too low to insure the losses of a large corporation, such as a GM. &lt;/p&gt;
&lt;p&gt;Finally, we need to ask ourselves the question: &#34;What value does insured security provide over simple insurance?&#34; I suspect there are some real values to customers in saved productivity and time, but further market research would be required to truly assess this. &lt;/p&gt;
&lt;p&gt;A security company could offset most of these risks by a partnership with an insurance company or another business within the insurance industry. We would need deep reserves and to work together with imaginative actuaries. Together we could offer insurance against the damages of security breaches. We would be the guardians against break-ins and the fixers if they did occur. The insurance company would help estimate risks, collect premiums and pay. &lt;/p&gt;
&lt;p&gt;If we chose to go it alone, we could offer risk mitigation services to insurance companies. We would guard and provide disaster mitigation services for a monthly premium. For example, when offering an anti-breakin security system, we could offer a guarantee to rebuild all certified systems if an intrusion does occur. This way we would take some, but not all, of the risks. Perhaps our presence would reduce insurance premiums enough to pay for our fees. &lt;/p&gt;
&lt;p&gt;Overall, despite potential risks, I believe that using an insurance model is a strong possibility for the security industry. &lt;/p&gt;
&lt;h4&gt;&lt;a name=&#34;reliability&#34;&gt;Solution #2: Improving Reliability&lt;/a&gt;&lt;/h4&gt;
&lt;p&gt;Some of us in the security business may feel like we are already providing reliability, because many of our products prevent catastrophic risks due to break-in, theft, and other malevolent acts. However, what we generally tend to offer is data security, not data reliability. Perhaps paradoxically, at the more personal, day-to-day level, the security industry has actually reduced data reliability in the name of improved data security. &lt;/p&gt;
&lt;p&gt;I can personally testify to this fact because I have, recently, lost data due to security. I encrypted a directory in Windows XP, then was later forced to rebuild my system. Apparently some of the required info to decrypt the directory was stored in some unrecoverable registry entry, because I can no longer access it. The data is totally secure, but also unavailable. &lt;/p&gt;
&lt;p&gt;This anecdote isn&#39;t unusual for the security industry. Forgotten keys can often cause cryptographic-related data loss. Likewise, VPNs and firewalls introduce single points of failure into networks. &lt;/p&gt;
&lt;p&gt;RSA&#39;s Nightingale technology of last year is a fairly standard security-based technology. It uses &#34;secret-splitting&#34; technology to divide sensitive data among two different locations, thus removing what RSA calls &#34;a single point of compromise&#34;; you can&#39;t get access to the data unless you compromise two machines. Clearly, there is improved data security. However it raises the same old problem of data reliability, because now data can be lost if either of two servers is lost. &lt;/p&gt;
&lt;p&gt;Improving reliability of extant security protocols is a good move forward in this expansion of the industry. For example in a classic cryptography situation we might unlock data with multiple secrets, but only require a set number of those secrets to unlock the data, not all of them.&lt;/p&gt;
&lt;p&gt;Consider a company who is encrypting some of their most sensitive sales and marketing data. Ten company officers might each possess a secret which together can be used to decrypt all the data. However, this introduces a clear reliability problem, as the departure of any officer could leave all sales and marketing data unreadable. (Likewise, just restricting this data access to one specific secret, such as that of the VP of Sales, introduces this single-point-of-failure condition.) Instead we could offer a high reliability, but secure situation where any five (of ten) secrets together could decrypt the data. Therefore, if an individual officer disappears, leaves for a rival company, or otherwise makes his secret unavailable, not only can he himself not access the data alone, but even if he leaves with the secret the remainder of the company&#39;s access is unaffected. And, if a company didn&#39;t think that &#34;5 of 10&#34; executive was the right number, they could instead only require &#34;3 of 10&#34; to decrypt the data ... or &#34;7&#34; or &#34;9&#34;.&lt;/p&gt;
&lt;p&gt;By thinking in this new methodology, by measuring security against reliability, we can offer our customers real choices and let them each choose the level of security that works best for them. &lt;/p&gt;
&lt;p&gt;However, the underlying bases of cryptography let us go a step further than this. Even without considering security implications, we can make use of our existing cryptographic algorithms in order to allow for more reliable access to and retrieval of all sorts of data. In other words, we can offer protection against not just hackers, but also backup errors, system crashes, and other catastrophic failures that are actually much more likely to affect the average user than an Internet security breach is. &lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;http://www.ietf.org/html.charters/ips-charter.html&#34;&gt;iSCSI&lt;/a&gt;, a remote SCSI protocol, offers very good potential for interaction with cryptography. A redundancy caching technique, somewhat like RAID 5, could be integrated with a secret share system where, e.g., the data could be read as long as 80% of the remote drives (and thus their keys) could be accessed; this allows for a very high reliability storage system because individual storage drives could be distantly located, and at the same time uses cryptographic techniques to offset reliability problems that could potentially be caused by the uncertain and fluid nature of Internet connectivity. &lt;/p&gt;
&lt;p&gt;Even issues like load balancing and methods to deal with machine down-time might all be improved by some of our cryptographic techniques.&lt;/p&gt;
&lt;h4&gt;&lt;a name=&#34;enabling&#34;&gt;Solution #3: Leaving Behind Fear&lt;/a&gt;&lt;/h4&gt;
&lt;p&gt;In talking about insurance and reliability I feel like I&#39;m largely expanding upon a fairly well-known and conservative way of using cryptography. These are good first steps for companies that wish to move forward in a cryptography market that is shrinking due to our own success, but they&#39;re not necessarily enough for a major breakout into revenue sources that will make this once again an exciting industry from a business point of view.&lt;/p&gt;
&lt;p&gt;What is required, I believe, is a major paradigm shift. We need to leave the whole business of fear behind and instead embrace a new model: using cryptography to enable business rather than to prevent harm. We need to add value by making it possible to do profitable business in ways that are impossible today. There are, fortunately, many cryptographic opportunities, if we only consider them. &lt;/p&gt;
&lt;p&gt;Cryptography can be used to make business processes faster and more efficient. With tools derived from cryptography, executives can delegate more efficiently and introduce better checks and balances. They can implement improved decision systems. Entrepreneurs can create improved auction systems. Nick Szabo is one of the few developers who has really investigated this area, through his work on &lt;a href=&#34;http://www.firstmonday.dk/issues/issue2_9/szabo/&#34;&gt;Smart Contracts&lt;/a&gt;. He has suggested ways to create digital bearer certificates, and has contemplated some interesting secure auctioning techniques and even digital liens. Expanding upon his possibilities we can view the ultimate Smart Contract as a sort of Smart Property. Why not form a corporation on the fly with digital stock certificates, allow it to engage in its creative work, then pay out its investors and workers and dissolve? With new security paradigms, this is all possible. &lt;/p&gt;
&lt;p&gt;Federated identity is another area for potential expansion. Secure, federated identities could offer many benefits for consumers. Imagine being able to visit a third-party seller on the Internet, automatically charge a sale to your Amazon account, then automatically ship it to your standard address, all through a single secured identity token. Federated network identity also has real applicability in the business world, as is shown by the work being done by &lt;a href=&#34;http://www.projectliberty.org/&#34;&gt;Liberty Alliance&lt;/a&gt;. Through a business system like this, an auto parts manufacturer could offer his products to General Motors as part of a larger bid, all without having to specifically arrange identity with GM itself. &lt;/p&gt;
&lt;p&gt;However, there are notable challenges in the area of federated identity -- challenges which a new-paradigm security industry could lead the way in solving. Distinctions must be made regarding various levels of identity security, so that, e.g., your VPN couldn&#39;t be accessed if someone gained access to your Amazon password. In addition there are real concerns from users about controlling their user information, due to worries over spam and privacy; some users, for examples, might not want information about their politics, sexuality, or interests federated with information about their family or job. For instance do we really want our information on &lt;a href=&#34;http://www.orkut.com&#34;&gt;Orkut&lt;/a&gt; to be used by &lt;a href=&#34;http://www.google.com&#34;&gt;Google&lt;/a&gt;?. These challenges demonstrate why federated identity is still a leading edge possibility for the security industry.&lt;/p&gt;
&lt;p&gt;Beyond business processes and federated identity there are many other areas that the security industry should be considering, as it moves beyond the business of fear. The whole idea of Public Key Infrastructures should perhaps be rethought, and maybe we should resuscitate lost technologies such as Attribute Certificates, and some of the ideas such as local name spaces as in described Rivest&#39;s &lt;a href=&#34;http://theory.lcs.mit.edu/~cis/sdsi.html&#34;&gt;SDSI&lt;/a&gt;. There are also some interesting possibilities for trusted peer-to-peer environments that can be dynamically expanded on the fly. The possibilities are only limited by our imagination, if we can just think beyond current possibilities.&lt;/p&gt;
&lt;p&gt;We have already seen the first wave of security technology; now we need to initiate a second, for I believe with the next wave the best is yet to come.
&lt;footer&gt;&lt;h3&gt;Comments&lt;/h3&gt;
&lt;div class=&#34;u-comment h-cite&#34;&gt;
&lt;p class=&#34;p-content p-name&#34;&gt;Just thought I would comment that  in building actuarial tables, insurance companies have a relatively small set of policy-holder behaviors and traits. Auto insurance underwriters look at  age, vehicle model and model year, zip code, driving history, and maybe a few more traits. How do you even start to build a table for the computer industry? You&#39;re running Windows? Fine, double your premiums. You&#39;re running Windows 95? Great, double them again. You haven&#39;t updated your router firmware in three months? Well... what does that do the measure of risk? Anything?
I&#39;ve always really liked the idea of IT insurance as a way to drive effective, practical security protections, but  I think we&#39;re light-years away from collecting enough information to build a reliable actuarial table.
&lt;/p&gt;
&lt;a class=&#34;u-author h-card&#34; href=&#34;http://www.cryptonomicon.net/&#34;&gt;Matthew S. Hamrick&lt;/a&gt;
&lt;time class=&#34;dt-published&#34; datetime=&#34;2004-03-03T14:30:44-07:00&#34;&gt;2004-03-03T14:30:44-07:00&lt;/time&gt;
&lt;/div&gt;
&lt;div class=&#34;u-comment h-cite&#34;&gt;
&lt;p class=&#34;p-content p-name&#34;&gt;I enjoyed this article.
The RSA expo floor really makes me feel sad nowadays.  It has really driven home the lesson that security is not, as I once believed, a tool that naturally lends itself to increasing freedom.  Instead, like all tools, it cuts either way depending on the hand that guides it.
I remain hopeful that capability access control will be deployed and will enable, in Mark Miller&#39;s phrase, &#34;cooperation without vulnerability&#34;.  The concept of mutually untrusting code (operating on behalf of mutually untrusting people) cooperating in a single address space is a paradigm that the MUD culture has been practicing for at least a decade and that the Java culture is likely to discover in 2004.
The increasing importance of virtualization, Trusted/Treacherous Computing, and the like also lead us closer to this paradigm.
&lt;/p&gt;
&lt;a class=&#34;u-author h-card&#34; href=&#34;http://zooko.com/log.html&#34;&gt;Zooko O&#39;Whielacronx&lt;/a&gt;
&lt;time class=&#34;dt-published&#34; datetime=&#34;2004-03-04T05:48:07-07:00&#34;&gt;2004-03-04T05:48:07-07:00&lt;/time&gt;
&lt;/div&gt;
&lt;div class=&#34;u-comment h-cite&#34;&gt;
&lt;p class=&#34;p-content p-name&#34;&gt;URL:
So then one day this guy discovers the answer to the Reimann Conjecture and now Fear and risk are en vogue again. I was curious what you think might be the replacement for prime number pki?
&lt;/p&gt;
&lt;a class=&#34;u-author h-card&#34; href=&#34;#&#34;&gt;Joe&lt;/a&gt;
&lt;time class=&#34;dt-published&#34; datetime=&#34;2004-09-07T06:23:57-07:00&#34;&gt;2004-09-07T06:23:57-07:00&lt;/time&gt;
&lt;/div&gt;
&lt;/footer&gt;
&lt;p class=&#34;previous&#34;&gt;&lt;a href=&#34;http://www.lifewithalacrity.com/previous/2004/02/security_crypto.html&#34; rel=&#34;syndication&#34; class=&#34;u-syndication&#34; &gt;orginal layout&lt;/a&gt;&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>